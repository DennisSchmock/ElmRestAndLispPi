var _user$project$Main$decodeCount = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'value',
		_1: {ctor: '[]'}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$Model = function (a) {
	return {url: a};
};
var _user$project$Main$SetCount = {ctor: 'SetCount'};
var _user$project$Main$GetCount = {ctor: 'GetCount'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$GetCount),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Get'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$SetCount),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Set'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(model.url)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$NewCount = function (a) {
	return {ctor: 'NewCount', _0: a};
};
var _user$project$Main$getCount = function () {
	var url = 'http://localhost:3000/counter/';
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$NewCount,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeCount));
}();
var _user$project$Main$sendPutToServer = function (message) {
	var request = _elm_lang$http$Http$request(
		{
			method: 'PUT',
			headers: {ctor: '[]'},
			url: A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:3000/counter/', message),
			body: _elm_lang$http$Http$emptyBody,
			expect: _elm_lang$http$Http$expectString,
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
	return A2(_elm_lang$http$Http$send, _user$project$Main$NewCount, request);
};
var _user$project$Main$update = F2(
	function (message, model) {
		var _p0 = A2(_elm_lang$core$Debug$log, 'Debug ', message);
		switch (_p0.ctor) {
			case 'NewCount':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Main$Model(_p0._0._0),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Main$Model('I really failed'),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'GetCount':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$getCount};
			default:
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$sendPutToServer('1')
				};
		}
	});
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {
			ctor: '_Tuple2',
			_0: _user$project$Main$Model('99'),
			_1: _elm_lang$core$Platform_Cmd$none
		},
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (x) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
